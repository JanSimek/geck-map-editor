name: Build

on:
  push:
    branches: [ master ]
    # TODO: paths: ['.github/workflows/*', 'src/*'] #only when these files are modifed
  pull_request:
    branches: [ master ]
    # TODO: paths: ['.github/workflows/*', 'src/*'] #only when these files are modifed

jobs:
  build:

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        # - {
        #     os: windows-latest,
        #     name: "Windows MSVC",
        #     cc: cl,
        #     cxx: cl,
        #     cflags: ""
        #   }
        # - {
        #     os: windows-latest,
        #     name: "Windows Clang",
        #     cc: clang-cl,
        #     cxx: clang-cl,
        #   }
        - {
            os: ubuntu-latest,
            name: "Linux Clang",
            cc: clang,
            cxx: clang++,
          }
        - {
            os: ubuntu-latest,
            name: "Linux GCC",
            cc: gcc,
            cxx: g++,
          }
        # - {
        #     os: macos-latest,
        #     name: "OS X GCC",
        #     cc: clang,
        #     cxx: clang++,
        #   }

    steps:
    - uses: actions/checkout@v2

    # - name: Install dependencies via apt
    #   if: runner.os == 'Linux'
    #   shell: bash
    #   run: |
    #     set -e
    #     sudo apt-get update
    #     sudo apt-get install gcc-multilib
    - name: Install conan
      shell: bash
      run: |
        python3 -m pip install --upgrade pip setuptools
        python3 -m pip install conan
        source ~/.profile

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      # We need to source the profile file to make sure conan is in PATH
      run: |
        source ~/.profile
        cmake -B build -DCMAKE_C_COMPILER=${{matrix.config.cc}} -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}}

    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build build -j 3

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

# TODO: release and publish artifacts: https://github.com/cristianadam/HelloWorld/blob/master/.github/workflows/build_cmake.yml
