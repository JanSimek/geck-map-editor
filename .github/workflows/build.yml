name: Build

on:
  push:
    branches: [master]
    # TODO: paths: ['.github/workflows/*', 'src/*'] #only when these files are modifed
  pull_request:
    branches: [master]
    # TODO: paths: ['.github/workflows/*', 'src/*'] #only when these files are modifed

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              os: windows-latest,
              name: "Windows MSVC",
              cc: cl,
              cxx: cl,
              cflags: "",
            }
          - {
              os: windows-latest,
              name: "Windows Clang",
              cc: clang-cl,
              cxx: clang-cl,
            }
          - { 
              os: ubuntu-latest, 
              name: "Linux Clang", 
              cc: clang, 
              cxx: clang++ 
            }
          - { 
              os: ubuntu-latest, 
              name: "Linux GCC", 
              cc: gcc-10, 
              cxx: g++-10 
            }
        # - {
        #     os: macos-latest,
        #     name: "OS X GCC",
        #     cc: clang,
        #     cxx: clang++,
        #   }

    steps:
      - uses: actions/checkout@v2

      # FIXME imgui-sfml
      - name: Install dependencies via apt
        if: runner.os == 'Linux'
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install xorg-dev libudev-dev libfreetype-dev libopenal-dev libxrandr-dev libflac-dev libvorbis-dev libsfml-dev libimgui-dev

      - name: Install dependencies via vcpkg
        if: runner.os == 'Windows'
        run: |
          vcpkg install --triplet x64-windows imgui[docking-experimental] sfml imgui-sfml

      # sudo apt-get build-dep libsfml-window2.5 libsfml-system2.5 libsfml-graphics2.5

      - name: Configure CMake
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            cmake \
              -B ./build \
              -DCMAKE_C_COMPILER=${{matrix.config.cc}} \
              -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}} \
              -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake \
              .
          else
            cmake \
              -B ./build \
              -DCMAKE_C_COMPILER=${{matrix.config.cc}} \
              -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}} \
              .
          fi

      - name: Build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build build -j 3
# TODO: release and publish artifacts: https://github.com/cristianadam/HelloWorld/blob/master/.github/workflows/build_cmake.yml
